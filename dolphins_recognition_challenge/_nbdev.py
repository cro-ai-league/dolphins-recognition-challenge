# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"dataset_url": "01_Datasets.ipynb",
         "dataset_test_url": "01_Datasets.ipynb",
         "dataset_root": "01_Datasets.ipynb",
         "dataset_zip": "01_Datasets.ipynb",
         "dataset_test_zip": "01_Datasets.ipynb",
         "DolphinsInstanceSegmentationDataset": "01_Datasets.ipynb",
         "ToTensor": "01_Datasets.ipynb",
         "stack_imgs": "01_Datasets.ipynb",
         "display_batches": "01_Datasets.ipynb",
         "get_image2tensor_transforms": "01_Datasets.ipynb",
         "get_dataset": "01_Datasets.ipynb",
         "get_test_dataset": "01_Datasets.ipynb",
         "Compose": "01_Datasets.ipynb",
         "RandomHorizontalFlip": "01_Datasets.ipynb",
         "device": "02_Model.ipynb",
         "train_one_epoch": "02_Model.ipynb",
         "show_prediction": "02_Model.ipynb",
         "show_predictions": "02_Model.ipynb",
         "get_true_and_predicted_masks": "02_Model.ipynb",
         "iou_metric_mask_pair": "02_Model.ipynb",
         "iou_metric_matrix_of_example": "02_Model.ipynb",
         "largest_values_in_row_colums": "02_Model.ipynb",
         "iou_metric_example": "02_Model.ipynb",
         "iou_metric": "02_Model.ipynb",
         "PermutedDataset": "02_Model.ipynb",
         "show_predictions_sorted_by_iou": "02_Model.ipynb",
         "get_presigned_url_from_aws": "03_Submissions.ipynb",
         "upload_with_presigned_url": "03_Submissions.ipynb",
         "submit_model": "03_Submissions.ipynb",
         "parse_filename": "04_Leaderboard.ipynb",
         "get_submissions_from_s3": "04_Leaderboard.ipynb",
         "s3": "04_Leaderboard.ipynb",
         "my_bucket": "04_Leaderboard.ipynb",
         "private_leaderboard_path": "04_Leaderboard.ipynb",
         "public_leaderboard_path": "04_Leaderboard.ipynb",
         "public": "04_Leaderboard.ipynb",
         "merge_with_private_leaderboard": "04_Leaderboard.ipynb",
         "evaluate_model": "04_Leaderboard.ipynb",
         "evaluate_private_leaderboard": "04_Leaderboard.ipynb",
         "cut_off_date": "04_Leaderboard.ipynb",
         "save_public_leaderboard": "04_Leaderboard.ipynb",
         "get_leaderboard": "04_Leaderboard.ipynb",
         "SmoothedValue": "09_Utils.ipynb",
         "all_gather": "09_Utils.ipynb",
         "reduce_dict": "09_Utils.ipynb",
         "MetricLogger": "09_Utils.ipynb",
         "collate_fn": "09_Utils.ipynb",
         "warmup_lr_scheduler": "09_Utils.ipynb",
         "mkdir": "09_Utils.ipynb",
         "setup_for_distributed": "09_Utils.ipynb",
         "is_dist_avail_and_initialized": "09_Utils.ipynb",
         "get_world_size": "09_Utils.ipynb",
         "get_rank": "09_Utils.ipynb",
         "is_main_process": "09_Utils.ipynb",
         "save_on_master": "09_Utils.ipynb",
         "init_distributed_mode": "09_Utils.ipynb",
         "ensure": "97_Helpers.ipynb",
         "ensure_equal": "97_Helpers.ipynb",
         "ensure_exists": "97_Helpers.ipynb",
         "fix_readme": "97_Helpers.ipynb",
         "glob_suffixes": "99_Image_resize.ipynb",
         "get_suffixes": "98_Convert_raw_image_to_jpg.ipynb",
         "get_rand_file_with_suff": "98_Convert_raw_image_to_jpg.ipynb",
         "get_one_image_for_each_suffix": "98_Convert_raw_image_to_jpg.ipynb",
         "create_sample_test_dir_if_needed": "98_Convert_raw_image_to_jpg.ipynb",
         "convert_image_to_jpg_darktable": "98_Convert_raw_image_to_jpg.ipynb",
         "convert_files_with_darktable": "98_Convert_raw_image_to_jpg.ipynb",
         "display_image": "99_Image_resize.ipynb",
         "separate_masks": "99_Image_resize.ipynb",
         "resize_composite_multi": "99_Image_resize.ipynb",
         "calculate_image_size": "99_Image_resize.ipynb",
         "file_suffix_in": "99_Image_resize.ipynb",
         "get_files_from_path": "99_Image_resize.ipynb",
         "recreate_dst_dir": "99_Image_resize.ipynb",
         "save_img_lbl_inst": "99_Image_resize.ipynb",
         "resize_dataset": "99_Image_resize.ipynb"}

modules = ["datasets.py",
           "instance_segmentation/model.py",
           "submissions.py",
           "leaderboard.py",
           "utils.py",
           "helpers.py",
           "convert_raw_jpg.py",
           "image_resize.py"]

doc_url = "https://cro-ai-league.cisex.org/"

git_url = "https://github.com/cro-ai-league/dolphins-recognition-challenge/tree/master/"

def custom_doc_links(name): return None
